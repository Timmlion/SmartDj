@page "/"
@using SmartDj.Shared.Models

<PageTitle>Home</PageTitle>
<Grid @ref="grid"
      TItem="SongRequest"
      Class="table table-hover table-bordered table-striped"
      DataProvider="SongRequestDataProvider">

    <GridColumn TItem="SongRequest" HeaderText="Id">
        @context.Id
    </GridColumn>
    <GridColumn TItem="SongRequest" HeaderText="Data">
        @context.DateCreated
    </GridColumn><GridColumn TItem="SongRequest" HeaderText="Piosenka">
        @context.SongTitle
    </GridColumn>
    <GridColumn TItem="SongRequest" HeaderText="Od kogo">
        @context.RequestorName
    </GridColumn>
    <GridColumn TItem="SongRequest" HeaderText="Dla kogo">
        @context.DedicateeName
    </GridColumn>
    <GridColumn TItem="SongRequest" HeaderText="Dedykacja">
        @context.Message
    </GridColumn>
    <GridColumn TItem="SongRequest" HeaderText="Było grane">
        @context.Played
    </GridColumn>

</Grid>

@code {
    BlazorBootstrap.Grid<SongRequest> grid = default!;
    private IEnumerable<SongRequest> songRequests = default!;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task<GridDataProviderResult<SongRequest>> SongRequestDataProvider(GridDataProviderRequest<SongRequest> request)
    {
        if (songRequests is null) // pull employees only one time for client-side filtering, sorting, and paging
            songRequests = GetSongRequests(); // call a service or an API to pull the employees

        return await Task.FromResult(request.ApplyTo(songRequests));
    }

    private IEnumerable<SongRequest> GetSongRequests()
    {
        return new List<SongRequest>
        {
            new SongRequest{Id = 1, DateCreated = DateTime.Now, RequestorName = "Zuzia", DedicateeName = "Zbigniew", SongTitle = "Tytuł piosenki", Message = "Dedykacja, Lorem ipsum pipsum sripsum tripsum bombiksum fafarafa fifirafifo", Played = true},
            new SongRequest{Id = 2, DateCreated = DateTime.Now, RequestorName = "Zuzia2", DedicateeName = "Zbigniew", SongTitle = "Tytuł piosenki", Message = "Dedykacja, Lorem ipsum pipsum sripsum tripsum bombiksum fafarafa fifirafifo", Played = false},
            new SongRequest{Id = 3, DateCreated = DateTime.Now, RequestorName = "Zuzia3", DedicateeName = "Zbigniew", SongTitle = "Tytuł piosenki", Message = "Dedykacja, Lorem ipsum pipsum sripsum tripsum bombiksum fafarafa fifirafifo", Played = false},
            new SongRequest{Id = 4, DateCreated = DateTime.Now, RequestorName = "Zuzia4", DedicateeName = "Zbigniew", SongTitle = "Tytuł piosenki", Message = "Dedykacja, Lorem ipsum pipsum sripsum tripsum bombiksum fafarafa fifirafifo", Played = false},
        };
    }
}}